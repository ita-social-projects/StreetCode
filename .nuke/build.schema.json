{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Build Schema",
  "$ref": "#/definitions/build",
  "definitions": {
    "build": {
      "type": "object",
      "properties": {
        "BName": {
          "type": "string",
          "description": "name of branch to checkout"
        },
        "Checkout": {
          "type": "boolean",
          "description": "checkout to branch"
        },
        "CleanRes": {
          "type": "boolean",
          "description": "enable to clean resources"
        },
        "Configuration": {
          "type": "string",
          "description": "Configuration to build - Default is 'Debug' (local) or 'Release' (server)",
          "enum": [
            "Debug",
            "Release"
          ]
        },
        "Continue": {
          "type": "boolean",
          "description": "Indicates to continue a previously failed build attempt"
        },
        "Dockerize": {
          "type": "boolean",
          "description": "Build in Docker"
        },
        "from": {
          "type": "string",
          "description": "Specifies FROM migration for script generationg"
        },
        "Help": {
          "type": "boolean",
          "description": "Shows the help text for this build assembly"
        },
        "Host": {
          "type": "string",
          "description": "Host for execution. Default is 'automatic'",
          "enum": [
            "AppVeyor",
            "AzurePipelines",
            "Bamboo",
            "Bitbucket",
            "Bitrise",
            "GitHubActions",
            "GitLab",
            "Jenkins",
            "Rider",
            "SpaceAutomation",
            "TeamCity",
            "Terminal",
            "TravisCI",
            "VisualStudio",
            "VSCode"
          ]
        },
        "ITest": {
          "type": "boolean",
          "description": "enable integration tests"
        },
        "migrname": {
          "type": "string",
          "description": "Specifies migration name during its creation"
        },
        "Msg": {
          "type": "string",
          "description": "commit message"
        },
        "name": {
          "type": "string",
          "description": "Specifies script file name"
        },
        "NewB": {
          "type": "boolean",
          "description": "create a new branch"
        },
        "NoLogo": {
          "type": "boolean",
          "description": "Disables displaying the NUKE logo"
        },
        "Partition": {
          "type": "string",
          "description": "Partition to use on CI"
        },
        "Plan": {
          "type": "boolean",
          "description": "Shows the execution plan (HTML)"
        },
        "Profile": {
          "type": "array",
          "description": "Defines the profiles to load",
          "items": {
            "type": "string"
          }
        },
        "Root": {
          "type": "string",
          "description": "Root directory during build execution"
        },
        "Skip": {
          "type": "array",
          "description": "List of targets to be skipped. Empty list skips all dependencies",
          "items": {
            "type": "string",
            "enum": [
              "AddMigration",
              "CheckoutBranch",
              "Clean",
              "CleanContainers",
              "CleanDocker",
              "CleanImages",
              "CleanNukeTemp",
              "CleanSubmodule",
              "CleanTests",
              "CleanVolumes",
              "CommitMainRepo",
              "CommitSubmodules",
              "CompileAPI",
              "CompileCli",
              "CreateDatabaseForIntegrationTests",
              "DeleteMirationScriptFile",
              "DropDatabase",
              "EndAll",
              "GenerateMigrationAndScript",
              "GenerateSQLScripts",
              "IntegrationTest",
              "PullBackEnd",
              "Push",
              "PushAll",
              "RemoveEnvVariables",
              "RemoveMigration",
              "RemoveMigrationAndScript",
              "Restore",
              "Run",
              "SeedUsersToDatabase",
              "SetLocalEnvironmentVariables",
              "SetScriptParametersForMigrationAndScriptAutogeneration",
              "Setup",
              "SetupBackEnd",
              "SetupDocker",
              "SetupFrontEnd",
              "SetupGit",
              "SetupIntegrationTestsEnvironment",
              "SetupIntegrationTestsEnvironmentVariables",
              "SetupLocal",
              "SetupPublic",
              "Test",
              "UnitTest",
              "UpdateDatabase",
              "UpdateSubmodules"
            ]
          }
        },
        "Solution": {
          "type": "string",
          "description": "Path to a solution file that is automatically loaded"
        },
        "Target": {
          "type": "array",
          "description": "List of targets to be invoked. Default is '{default_target}'",
          "items": {
            "type": "string",
            "enum": [
              "AddMigration",
              "CheckoutBranch",
              "Clean",
              "CleanContainers",
              "CleanDocker",
              "CleanImages",
              "CleanNukeTemp",
              "CleanSubmodule",
              "CleanTests",
              "CleanVolumes",
              "CommitMainRepo",
              "CommitSubmodules",
              "CompileAPI",
              "CompileCli",
              "CreateDatabaseForIntegrationTests",
              "DeleteMirationScriptFile",
              "DropDatabase",
              "EndAll",
              "GenerateMigrationAndScript",
              "GenerateSQLScripts",
              "IntegrationTest",
              "PullBackEnd",
              "Push",
              "PushAll",
              "RemoveEnvVariables",
              "RemoveMigration",
              "RemoveMigrationAndScript",
              "Restore",
              "Run",
              "SeedUsersToDatabase",
              "SetLocalEnvironmentVariables",
              "SetScriptParametersForMigrationAndScriptAutogeneration",
              "Setup",
              "SetupBackEnd",
              "SetupDocker",
              "SetupFrontEnd",
              "SetupGit",
              "SetupIntegrationTestsEnvironment",
              "SetupIntegrationTestsEnvironmentVariables",
              "SetupLocal",
              "SetupPublic",
              "Test",
              "UnitTest",
              "UpdateDatabase",
              "UpdateSubmodules"
            ]
          }
        },
        "to": {
          "type": "string",
          "description": "Specifies TO migration for script generationg"
        },
        "UTest": {
          "type": "boolean",
          "description": "enable unit tests"
        },
        "Verbosity": {
          "type": "string",
          "description": "Logging verbosity during build execution. Default is 'Normal'",
          "enum": [
            "Minimal",
            "Normal",
            "Quiet",
            "Verbose"
          ]
        },
        "WithCli": {
          "type": "boolean",
          "description": "update Streetcode_Client submodule"
        }
      }
    }
  }
}