<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CannotFindAnArtWithCorrespondingId" xml:space="preserve">
    <value>Cannot find an art with corresponding id: {0}</value>
  </data>
  <data name="CannotFindAnAudioWithCorrespondingCategoryId" xml:space="preserve">
    <value>Cannot find an audio with corresponding categoryId: {0}</value>
  </data>
  <data name="CannotFindAnAudioWithCorrespondingId" xml:space="preserve">
    <value>Cannot find an audio with corresponding id: {0}</value>
  </data>
  <data name="CannotFindAnAudioWithTheCorrespondingStreetcodeId" xml:space="preserve">
    <value>Cannot find an audio with the corresponding streetcode id: {0}</value>
  </data>
  <data name="CannotFindAnImageWithCorrespondingCategoryId" xml:space="preserve">
    <value>Cannot find an image with corresponding categoryId: {0}</value>
  </data>
  <data name="CannotFindAnImageWithTheCorrespondingStreetcodeId" xml:space="preserve">
    <value>Cannot find an image with the corresponding streetcode id: {0}</value>
  </data>
  <data name="CannotFindAnyArts" xml:space="preserve">
    <value>Cannot find any arts</value>
  </data>
  <data name="CannotFindAnyArtWithCorrespondingStreetcodeId" xml:space="preserve">
    <value>Cannot find any art with corresponding streetcode id: {0}</value>
  </data>
  <data name="CannotFindAnyAudios" xml:space="preserve">
    <value>Cannot find any audios</value>
  </data>
  <data name="CannotFindAnyFact" xml:space="preserve">
    <value>Cannot find any fact</value>
  </data>
  <data name="CannotFindAnyFactByTheStreetcodeId" xml:space="preserve">
    <value>Cannot find any fact by the streetcode id: {0}</value>
  </data>
  <data name="CannotFindAnyFactWithCorrespondingId" xml:space="preserve">
    <value>Cannot find any fact with corresponding id: {0}</value>
  </data>
  <data name="CannotFindAnyHistoricalContexts" xml:space="preserve">
    <value>Cannot find any historical contexts</value>
  </data>
  <data name="CannotFindAnyImage" xml:space="preserve">
    <value>Cannot find any image</value>
  </data>
  <data name="CannotFindAnyPartners" xml:space="preserve">
    <value>Cannot find any partners</value>
  </data>
  <data name="CannotFindAnyPartnerWithCorrespondingId" xml:space="preserve">
    <value>Cannot find any partner with corresponding id: {0}</value>
  </data>
  <data name="CannotFindAnyPositions" xml:space="preserve">
    <value>Cannot find any positions</value>
  </data>
  <data name="CannotFindAnyRelatedFiguresByStreetcodeId" xml:space="preserve">
    <value>Cannot find any related figures by a streetcode id: {0}</value>
  </data>
  <data name="CannotFindAnySourceCategoryWithTheStreetcodeId" xml:space="preserve">
    <value>Cannot find any source category with the streetcode id {0}</value>
  </data>
  <data name="CannotFindAnySrcCategoryByTheCorrespondingId" xml:space="preserve">
    <value>Cannot find any srcCategory by the corresponding id: {0}</value>
  </data>
  <data name="CannotFindAnyStreetcodeWithCorrespondingId" xml:space="preserve">
    <value>Cannot find any streetcode with corresponding id: {0}</value>
  </data>
  <data name="CannotFindAnyStreetcodeWithCorrespondingIndex" xml:space="preserve">
    <value>Cannot find any streetcode with corresponding index: {0}</value>
  </data>
  <data name="CannotFindAnyStreetcodeWithCorrespondingStreetcodeId" xml:space="preserve">
    <value>Cannot find any streetcode with corresponding streetcode id: {0}</value>
  </data>
  <data name="CannotFindAnyStreetcodeWithCorrespondingTagId" xml:space="preserve">
    <value>Cannot find any streetcode with corresponding tagid: {0}</value>
  </data>
  <data name="CannotFindAnySubtitleByTheStreetcodeId" xml:space="preserve">
    <value>Cannot find any subtitle by the streetcode id: {0}</value>
  </data>
  <data name="CannotFindAnySubtitles" xml:space="preserve">
    <value>Cannot find any subtitles</value>
  </data>
  <data name="CannotFindAnyTagByTheStreetcodeId" xml:space="preserve">
    <value>Cannot find any tag by the streetcode id: {0}</value>
  </data>
  <data name="CannotFindAnyTagByTheTitle" xml:space="preserve">
    <value>Cannot find any tag by the title: {0}</value>
  </data>
  <data name="CannotFindAnyTags" xml:space="preserve">
    <value>Cannot find any tags</value>
  </data>
  <data name="CannotFindAnyTeam" xml:space="preserve">
    <value>Cannot find any team</value>
  </data>
  <data name="CannotFindAnyTeamLinks" xml:space="preserve">
    <value>Cannot find any team links</value>
  </data>
  <data name="CannotFindAnyTeamWithCorrespondingId" xml:space="preserve">
    <value>Cannot find any team with corresponding id: {0}</value>
  </data>
  <data name="CannotFindAnyTerm" xml:space="preserve">
    <value>Cannot find any term</value>
  </data>
  <data name="CannotFindAnyTermWithCorrespondingId" xml:space="preserve">
    <value>Cannot find any term with corresponding id: {0}</value>
  </data>
  <data name="CannotFindAnyText" xml:space="preserve">
    <value>Cannot find any text</value>
  </data>
  <data name="CannotFindAnyTextWithCorrespondingId" xml:space="preserve">
    <value>Cannot find any text with corresponding id: {0}</value>
  </data>
  <data name="CannotFindAnyTimelineItem" xml:space="preserve">
    <value>Cannot find any timelineItem</value>
  </data>
  <data name="CannotFindAnyTimelineItemByTheStreetcodeId" xml:space="preserve">
    <value>Cannot find any timeline item by the streetcode id: {0}</value>
  </data>
  <data name="CannotFindAnyToponymByTheStreetcodeId" xml:space="preserve">
    <value>Cannot find any toponym by the streetcode id: {0}</value>
  </data>
  <data name="CannotFindAnyToponymWithCorrespondingId" xml:space="preserve">
    <value>Cannot find any toponym with corresponding id: {0}</value>
  </data>
  <data name="CannotFindAnyTransactionLink" xml:space="preserve">
    <value>Cannot find any transaction link</value>
  </data>
  <data name="CannotFindAnyTransactionLinkWithCorrespondingId" xml:space="preserve">
    <value>Cannot find any transaction link with corresponding id: {0}</value>
  </data>
  <data name="CannotFindAnyVideoByTheStreetcodeId" xml:space="preserve">
    <value>Cannot find any video by the streetcode id: {0}</value>
  </data>
  <data name="CannotFindAnyVideos" xml:space="preserve">
    <value>Cannot find any videos</value>
  </data>
  <data name="CannotFindCategoryWithCorrespondingCategoryId" xml:space="preserve">
    <value>Cannot find a category with corresponding categoryId: {0}</value>
  </data>
  <data name="CannotFindCoordinatesByStreetcodeId" xml:space="preserve">
    <value>Cannot find coordinates by streetcodeId: {0}</value>
  </data>
  <data name="CannotFindCoordinateWithCorrespondingCategoryId" xml:space="preserve">
    <value>Cannot find coordinate with corresponding categoryId: {0}</value>
  </data>
  <data name="CannotFindFactWithCorrespondingCategoryId" xml:space="preserve">
    <value>Cannot find a fact with corresponding categoryId: {0}</value>
  </data>
  <data name="CannotFindImageWithCorrespondingId" xml:space="preserve">
    <value>Cannot find an image with corresponding id: {0}</value>
  </data>
  <data name="CannotFindPartnersByStreetcodeId" xml:space="preserve">
    <value>Cannot find a partners by a streetcode id: {0}</value>
  </data>
  <data name="CannotFindRecordWithQrId" xml:space="preserve">
    <value>Cannot find record for qrId</value>
  </data>
  <data name="CannotFindRelatedTermWithCorrespondingId" xml:space="preserve">
    <value>Cannot find a related term with corresponding id: {0}</value>
  </data>
  <data name="CannotFindRelationBetweenStreetcodesWithCorrespondingIds" xml:space="preserve">
    <value>Cannot find a relation between streetcodes with corresponding ids: {0} &amp; {1}</value>
  </data>
  <data name="CannotFindStreetcodeById" xml:space="preserve">
    <value>Cannot find streetcode by id</value>
  </data>
  <data name="CannotFindStreetcodeByTransliterationUrl" xml:space="preserve">
    <value>Cannot find streetcode by transliteration url: {0}</value>
  </data>
  <data name="CannotFindStreetcodeWithCorrespondingCategoryId" xml:space="preserve">
    <value>Cannot find a streetcode with corresponding categoryId: {0}</value>
  </data>
  <data name="CannotFindSubtitleWithCorrespondingId" xml:space="preserve">
    <value>Cannot find a subtitle with corresponding id: {0}</value>
  </data>
  <data name="CannotFindTagWithCorrespondingId" xml:space="preserve">
    <value>Cannot find a Tag with corresponding id: {0}</value>
  </data>
  <data name="CannotFindTextWithCorrespondingCategoryId" xml:space="preserve">
    <value>Cannot find a text with corresponding categoryId: {0}</value>
  </data>
  <data name="CannotFindTimelineItemWithCorrespondingId" xml:space="preserve">
    <value>Cannot find a timeline item with corresponding id: {0}</value>
  </data>
  <data name="CannotFindTransactionLinkByStreetcodeId" xml:space="preserve">
    <value>Cannot find a transaction link by a streetcode id: {0}</value>
  </data>
  <data name="CannotFindTransactionLinkByStreetcodeIdBecause" xml:space="preserve">
    <value>Cannot find a transaction link by a streetcode id: {0}, because such streetcode doesn`t exist</value>
  </data>
  <data name="CannotFindVideoWithCorrespondingId" xml:space="preserve">
    <value>Cannot find a video with corresponding id: {0}</value>
  </data>
</root>